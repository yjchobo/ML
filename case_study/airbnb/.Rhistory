group by case when ts_reply_at_first_posix is null then "no_reply" else "replied" end
,case when ts_accepted_at_first_posix is null then "no_accept" else "accepted" end
,case when ts_booking_at_posix is null then "no_booking" else "booking" end
')
colnames(ccontacts)
colnames(contacts)
###read data
users <- read.csv("users.csv")
listings <- read.csv("listings.csv")
contacts <- read.csv("contacts.csv")
guestid <- unique(contacts$id_guest_anon)
hostid <- unique(contacts$id_host_anon)
listingid <- unique(listings$id_listing_anon)
###clean data
#create posix versions of timestamps for datetime calculations
datetimestamps = c("ts_interaction_first","ts_reply_at_first","ts_accepted_at_first","ts_booking_at")
datetimestamps.posix = c("ts_interaction_first_posix","ts_reply_at_first_posix","ts_accepted_at_first_posix","ts_booking_at_posix")
datestamps = c("ds_checkin_first","ds_checkout_first")
datestamps_posix = c("ds_checkin_first_posix","ds_checkout_first_posix")
contacts[datetimestamps] <- sapply(contacts[datetimestamps],as.character)
contacts[datestamps] <- sapply(contacts[datestamps],as.character)
contacts[datetimestamps.posix] <- sapply(contacts[datetimestamps],as.POSIXct,format="%Y-%m-%d%H:%M:%S")
contacts[datestamps.posix] <- sapply(contacts[datestamps],as.POSIXct,format="%Y-%m-%d")
#remove negative number of reviews
listings$total_reviews[listings$total_reviews < 0] <- 0
View(contacts)
users <- read.csv("users.csv")
listings <- read.csv("listings.csv")
contacts <- read.csv("contacts.csv")
guestid <- unique(contacts$id_guest_anon)
hostid <- unique(contacts$id_host_anon)
listingid <- unique(listings$id_listing_anon)
datetimestamps = c("ts_interaction_first","ts_reply_at_first","ts_accepted_at_first","ts_booking_at")
datetimestamps.posix = c("ts_interaction_first_posix","ts_reply_at_first_posix","ts_accepted_at_first_posix","ts_booking_at_posix")
datestamps = c("ds_checkin_first","ds_checkout_first")
datestamps_posix = c("ds_checkin_first_posix","ds_checkout_first_posix")
datetimestamps = c("ts_interaction_first","ts_reply_at_first","ts_accepted_at_first","ts_booking_at")
datetimestamps.posix = c("ts_interaction_first_posix","ts_reply_at_first_posix","ts_accepted_at_first_posix","ts_booking_at_posix")
datestamps = c("ds_checkin_first","ds_checkout_first")
datestamps.posix = c("ds_checkin_first_posix","ds_checkout_first_posix")
contacts[datetimestamps] <- sapply(contacts[datetimestamps],as.character)
contacts[datestamps] <- sapply(contacts[datestamps],as.character)
contacts[datetimestamps.posix] <- sapply(contacts[datetimestamps],as.POSIXct,format="%Y-%m-%d%H:%M:%S")
contacts[datestamps.posix] <- sapply(contacts[datestamps],as.POSIXct,format="%Y-%m-%d")
listings$total_reviews[listings$total_reviews < 0] <- 0
View(contacts)
colnames(contacts)
contacts$ojojojojojoj = 4
users <- read.csv("users.csv")
listings <- read.csv("listings.csv")
contacts <- read.csv("contacts.csv")
guestid <- unique(contacts$id_guest_anon)
hostid <- unique(contacts$id_host_anon)
listingid <- unique(listings$id_listing_anon)
###clean data
#create posix versions of timestamps for datetime calculations
datetimestamps = c("ts_interaction_first","ts_reply_at_first","ts_accepted_at_first","ts_booking_at")
datetimestamps.posix = c("ts_interaction_first_posix","ts_reply_at_first_posix","ts_accepted_at_first_posix","ts_booking_at_posix")
datestamps = c("ds_checkin_first","ds_checkout_first")
datestamps.posix = c("ds_checkin_first_posix","ds_checkout_first_posix")
contacts[datetimestamps] <- sapply(contacts[datetimestamps],as.character)
contacts[datestamps] <- sapply(contacts[datestamps],as.character)
contacts[datetimestamps.posix] <- sapply(contacts[datetimestamps],as.POSIXct,format="%Y-%m-%d%H:%M:%S")
contacts[datestamps.posix] <- sapply(contacts[datestamps],as.POSIXct,format="%Y-%m-%d")
#Day of the week for requested checkin date
contacts$dow_checkin = weekdays(contacts$ds_checkin_first, abbreviate = T)
users <- read.csv("users.csv")
listings <- read.csv("listings.csv")
contacts <- read.csv("contacts.csv")
guestid <- unique(contacts$id_guest_anon)
hostid <- unique(contacts$id_host_anon)
listingid <- unique(listings$id_listing_anon)
###clean data
#create posix versions of timestamps for datetime calculations
datetimestamps = c("ts_interaction_first","ts_reply_at_first","ts_accepted_at_first","ts_booking_at")
datetimestamps.posix = c("ts_interaction_first_posix","ts_reply_at_first_posix","ts_accepted_at_first_posix","ts_booking_at_posix")
datestamps = c("ds_checkin_first","ds_checkout_first")
datestamps.posix = c("ds_checkin_first_posix","ds_checkout_first_posix")
contacts[datetimestamps] <- sapply(contacts[datetimestamps],as.character)
contacts[datestamps] <- sapply(contacts[datestamps],as.character)
contacts[datetimestamps.posix] <- sapply(contacts[datetimestamps],as.POSIXct,format="%Y-%m-%d%H:%M:%S")
contacts[datestamps.posix] <- sapply(contacts[datestamps],as.POSIXct,format="%Y-%m-%d")
contacts$dow_checkin = weekdays(contacts$ds_checkin_first_posix, abbreviate = T)
View(contacts)
contacts$dow_checkin = month(contacts$ds_checkin_first_posix)
View(contacts)
users <- read.csv("users.csv")
listings <- read.csv("listings.csv")
contacts <- read.csv("contacts.csv")
guestid <- unique(contacts$id_guest_anon)
hostid <- unique(contacts$id_host_anon)
listingid <- unique(listings$id_listing_anon)
###clean data
#create posix versions of timestamps for datetime calculations
datetimestamps = c("ts_interaction_first","ts_reply_at_first","ts_accepted_at_first","ts_booking_at")
datetimestamps.posix = c("ts_interaction_first_posix","ts_reply_at_first_posix","ts_accepted_at_first_posix","ts_booking_at_posix")
datestamps = c("ds_checkin_first","ds_checkout_first")
datestamps.posix = c("ds_checkin_first_posix","ds_checkout_first_posix")
contacts[datetimestamps] <- sapply(contacts[datetimestamps],as.character)
contacts[datestamps] <- sapply(contacts[datestamps],as.character)
contacts[datetimestamps.posix] <- sapply(contacts[datetimestamps],as.POSIXct,format="%Y-%m-%d%H:%M:%S")
contacts[datestamps.posix] <- sapply(contacts[datestamps],as.POSIXct,format="%Y-%m-%d")
#Day of the week for requested checkin date
contacts$dow_checkin = weekdays(contacts$ds_checkin_first_posix, abbreviate = T)
contacts$moy_checkin = month(contacts$ds_checkin_first_posix)
View(contacts)
contacts$moy_checkin = month(as.factor(contacts$ds_checkin_first_posix))
contacts$moy_checkin = month(as.factor(contacts$ds_checkin_first))
View(contacts)
colnames(guest)
colnames(users)
colnames(listings)
lubridate::
contacts$days_duration_requested_stay <- day(contacts$ds_checkout_first.posix - contacts$ds_checkin_first.posix)
contacts$days_from_first_contact_to_first_checkin <-day(contacts$ds_checkin_first.posix - contacts$ts_interaction_first.posix)
contacts$minute_from_first_reply_to_accept <-minute(contacts$ts_accepted_at_first_posix - contacts$ts_reply_at_first_posix)
contacts$time_from_first_touch_to_reply <-minute(contacts$ts_reply_at_first_posix - contacts$ts_interaction_first_posix)
contacts$days_duration_requested_stay <- day((contacts$ds_checkout_first.posix - contacts$ds_checkin_first.posix))
contacts$days_from_first_contact_to_first_checkin <-day((contacts$ds_checkin_first.posix - contacts$ts_interaction_first.posix))
contacts$minute_from_first_reply_to_accept <-minute((contacts$ts_accepted_at_first_posix - contacts$ts_reply_at_first_posix))
contacts$time_from_first_touch_to_reply <-minute((contacts$ts_reply_at_first_posix - contacts$ts_interaction_first_posix))
contacts$ds_checkout_first.posix - contacts$ds_checkin_first.posix
contacts$ds_checkout_first.posix
users <- read.csv("users.csv")
listings <- read.csv("listings.csv")
contacts <- read.csv("contacts.csv")
#save entities
guestid <- unique(contacts$id_guest_anon)
hostid <- unique(contacts$id_host_anon)
listingid <- unique(listings$id_listing_anon)
###clean data
#create posix versions of timestamps for datetime calculations
datetimestamps = c("ts_interaction_first","ts_reply_at_first","ts_accepted_at_first","ts_booking_at")
datetimestamps.posix = c("ts_interaction_first_posix","ts_reply_at_first_posix","ts_accepted_at_first_posix","ts_booking_at_posix")
datestamps = c("ds_checkin_first","ds_checkout_first")
datestamps.posix = c("ds_checkin_first_posix","ds_checkout_first_posix")
contacts[datetimestamps] <- sapply(contacts[datetimestamps],as.character)
contacts[datestamps] <- sapply(contacts[datestamps],as.character)
contacts[datetimestamps.posix] <- sapply(contacts[datetimestamps],as.POSIXct,format="%Y-%m-%d%H:%M:%S")
contacts[datestamps.posix] <- sapply(contacts[datestamps],as.POSIXct,format="%Y-%m-%d")
#Day of the week for requested checkin date
contacts$dow_checkin = weekdays(contacts$ds_checkin_first_posix, abbreviate = T)
#Month of the year for requested checkin date
contacts$moy_checkin = month(as.factor(contacts$ds_checkin_first))
View(contacts)
contacts$days_duration_requested_stay <- day((contacts$ds_checkout_first.posix - contacts$ds_checkin_first.posix))
contacts$days_from_first_contact_to_first_checkin <-day((contacts$ds_checkin_first.posix - contacts$ts_interaction_first.posix))
contacts$minute_from_first_reply_to_accept <-minute((contacts$ts_accepted_at_first_posix - contacts$ts_reply_at_first_posix))
contacts$time_from_first_touch_to_reply <-minute((contacts$ts_reply_at_first_posix - contacts$ts_interaction_first_posix))
View(users)
View(contacts)
contacts$ds_checkout_first.posix
contacts$ds_checkin_first.posix
contacts$dow_checkin
str(contacts)
contacts$ds_checkout_first_posix
contacts$ds_checkin_first_posix
contacts$ds_checkout_first_posix - contacts$ds_checkin_first_posix
###read data
users <- read.csv("users.csv")
listings <- read.csv("listings.csv")
contacts <- read.csv("contacts.csv")
#save entities
guestid <- unique(contacts$id_guest_anon)
hostid <- unique(contacts$id_host_anon)
listingid <- unique(listings$id_listing_anon)
###clean data
#create posix versions of timestamps for datetime calculations
datetimestamps = c("ts_interaction_first","ts_reply_at_first","ts_accepted_at_first","ts_booking_at")
datetimestamps.posix = c("ts_interaction_first_posix","ts_reply_at_first_posix","ts_accepted_at_first_posix","ts_booking_at_posix")
datestamps = c("ds_checkin_first","ds_checkout_first")
datestamps.posix = c("ds_checkin_first_posix","ds_checkout_first_posix")
contacts[datetimestamps] <- sapply(contacts[datetimestamps],as.character)
contacts[datestamps] <- sapply(contacts[datestamps],as.character)
contacts[datetimestamps.posix] <- sapply(contacts[datetimestamps],as.POSIXct,format="%Y-%m-%d%H:%M:%S")
contacts[datestamps.posix] <- sapply(contacts[datestamps],as.POSIXct,format="%Y-%m-%d")
#Day of the week for requested checkin date
contacts$dow_checkin = weekdays(contacts$ds_checkin_first_posix, abbreviate = T)
#Month of the year for requested checkin date
contacts$moy_checkin = month(as.factor(contacts$ds_checkin_first))
contacts$days_duration_requested_stay <- day((contacts$ds_checkout_first_posix - contacts$ds_checkin_first_posix))
contacts$days_from_first_contact_to_first_checkin <-day((contacts$ds_checkin_first.posix - contacts$ts_interaction_first_posix))
contacts$minute_from_first_reply_to_accept <-minute((contacts$ts_accepted_at_first_posix - contacts$ts_reply_at_first_posix))
contacts$time_from_first_touch_to_reply <-minute((contacts$ts_reply_at_first_posix - contacts$ts_interaction_first_posix))
#remove negative number of reviews
listings$total_reviews[listings$total_reviews < 0] <- 0
contacts$ds_checkout_first_posix - contacts$ds_checkin_first_posix
a<-contacts$ds_checkout_first_posix - contacts$ds_checkin_first_posix
a
day(contacts$ds_checkout_first_posix - contacts$ds_checkin_first_posix)
View(contacts)
contacts$days_duration_requested_stay <- difftime(contacts$ds_checkout_first_posix, contacts$ds_checkin_first_posix, units=c("days"))
difftime(contacts$ds_checkout_first_posix, contacts$ds_checkin_first_posix, units=c("days"))
contacts$days_duration_requested_stay <- difftime(as.POSIXct(contacts$ds_checkout_first), as.POSIXct(contacts$ds_checkin_first), units=c("days"))
View(contacts)
###read data
users <- read.csv("users.csv")
listings <- read.csv("listings.csv")
contacts <- read.csv("contacts.csv")
#save entities
guestid <- unique(contacts$id_guest_anon)
hostid <- unique(contacts$id_host_anon)
listingid <- unique(listings$id_listing_anon)
###clean data
#create posix versions of timestamps for datetime calculations
datetimestamps = c("ts_interaction_first","ts_reply_at_first","ts_accepted_at_first","ts_booking_at")
datetimestamps.posix = c("ts_interaction_first_posix","ts_reply_at_first_posix","ts_accepted_at_first_posix","ts_booking_at_posix")
datestamps = c("ds_checkin_first","ds_checkout_first")
datestamps.posix = c("ds_checkin_first_posix","ds_checkout_first_posix")
contacts[datetimestamps] <- sapply(contacts[datetimestamps],as.character)
contacts[datestamps] <- sapply(contacts[datestamps],as.character)
contacts[datetimestamps.posix] <- sapply(contacts[datetimestamps],as.POSIXct,format="%Y-%m-%d%H:%M:%S")
contacts[datestamps.posix] <- sapply(contacts[datestamps],as.POSIXct,format="%Y-%m-%d")
#Day of the week for requested checkin date
contacts$dow_checkin = weekdays(contacts$ds_checkin_first_posix, abbreviate = T)
#Month of the year for requested checkin date
contacts$moy_checkin = month(as.factor(contacts$ds_checkin_first))
#calculating time attributes
contacts$days_duration_requested_stay <- difftime(as.POSIXct(contacts$ds_checkout_first), as.POSIXct(contacts$ds_checkin_first), units=c("days"))
contacts$days_from_first_contact_to_first_checkin <- difftime(as.POSIXct(contacts$ds_checkin_first), as.POSIXct(contacts$ts_interaction_first), units=c("days"))
contacts$minute_from_first_reply_to_accept <- difftime(as.POSIXct(contacts$ts_accepted_at_first), as.POSIXct(contacts$ts_reply_at_first), units=c("mins"))
contacts$minute_from_first_touch_to_reply <- difftime(as.POSIXct(contacts$ts_reply_at_first), as.POSIXct(contacts$ts_interaction_first), units=c("mins"))
#remove negative number of reviews
listings$total_reviews[listings$total_reviews < 0] <- 0
contacts$minute_from_first_reply_to_accept <- difftime(as.POSIXct(contacts$ts_accepted_at_first,format="%Y-%m-%d%H:%M:%S"), as.POSIXct(contacts$ts_reply_at_first,format="%Y-%m-%d%H:%M:%S"), units=c("mins"))
contacts$minute_from_first_touch_to_reply <- difftime(as.POSIXct(contacts$ts_reply_at_first,format="%Y-%m-%d%H:%M:%S"), as.POSIXct(contacts$ts_interaction_first,format="%Y-%m-%d%H:%M:%S"), units=c("mins"))
###read data
users <- read.csv("users.csv")
listings <- read.csv("listings.csv")
contacts <- read.csv("contacts.csv")
#save entities
guestid <- unique(contacts$id_guest_anon)
hostid <- unique(contacts$id_host_anon)
listingid <- unique(listings$id_listing_anon)
###clean data
#create posix versions of timestamps for datetime calculations
datetimestamps = c("ts_interaction_first","ts_reply_at_first","ts_accepted_at_first","ts_booking_at")
datetimestamps.posix = c("ts_interaction_first_posix","ts_reply_at_first_posix","ts_accepted_at_first_posix","ts_booking_at_posix")
datestamps = c("ds_checkin_first","ds_checkout_first")
datestamps.posix = c("ds_checkin_first_posix","ds_checkout_first_posix")
contacts[datetimestamps] <- sapply(contacts[datetimestamps],as.character)
contacts[datestamps] <- sapply(contacts[datestamps],as.character)
contacts[datetimestamps.posix] <- sapply(contacts[datetimestamps],as.POSIXct,format="%Y-%m-%d%H:%M:%S")
contacts[datestamps.posix] <- sapply(contacts[datestamps],as.POSIXct,format="%Y-%m-%d")
#Day of the week for requested checkin date
contacts$dow_checkin = weekdays(contacts$ds_checkin_first_posix, abbreviate = T)
#Month of the year for requested checkin date
contacts$moy_checkin = month(as.factor(contacts$ds_checkin_first))
#calculating time attributes
contacts$days_duration_requested_stay <- difftime(as.POSIXct(contacts$ds_checkout_first), as.POSIXct(contacts$ds_checkin_first), units=c("days"))
contacts$days_from_first_contact_to_first_checkin <- difftime(as.POSIXct(contacts$ds_checkin_first), as.POSIXct(contacts$ts_interaction_first), units=c("days"))
contacts$minute_from_first_reply_to_accept <- difftime(as.POSIXct(contacts$ts_accepted_at_first,format="%Y-%m-%d%H:%M:%S"), as.POSIXct(contacts$ts_reply_at_first,format="%Y-%m-%d%H:%M:%S"), units=c("mins"))
contacts$minute_from_first_touch_to_reply <- difftime(as.POSIXct(contacts$ts_reply_at_first,format="%Y-%m-%d%H:%M:%S"), as.POSIXct(contacts$ts_interaction_first,format="%Y-%m-%d%H:%M:%S"), units=c("mins"))
View(contacts)
p1 <- sqldf('select
--target variable
(case when ts_booking_at_posix is null then 0 else 1 end) as target,
--reservation related attributes
c.days_duration_requested_stay,
c.m_guest,
c.days_from_first_contact_to_first_checkin
c.dow_checkin,
c.moy_checkin,
--guest"s attribute
g.country as guest_country,
g.words_in_user_profile as guest_words_in_profile,
c.guest_user_stage_first,
--guest"s attribute
h.country as host_country,
h.words_in_user_profile as host_words_in_profile,
--listing"s attribute
l.room_type,
l.listing_neighborhood,
l.total_reviews,
--host and guest interaction attribute
c.m_interactions,
c.minute_from_first_reply_to_accept,
c.minute_from_first_touch_to_reply
from contacts c
left join users g on g.id_guest_anon = c.id_user_anon            --guests
left join users h on h.id_host_anon = c.id_user_anon             --hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    --listing
')
p1 <- sqldf('select
*
from contacts c
left join users g on g.id_guest_anon = c.id_user_anon            --guests
left join users h on h.id_host_anon = c.id_user_anon             --hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    --listing
')
View(contacts)
p1 <- sqldf('select
*
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            --guests
left join users h on h.id_user_anon = c.id_host_anon             --hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    --listing
')
p1 <- sqldf('select
c.id_guest_anon
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            --guests
left join users h on h.id_user_anon = c.id_host_anon             --hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    --listing
')
p1
p1 <- sqldf('select
--target variable
(case when ts_booking_at_posix is null then 0 else 1 end) as target,
--reservation related attributes
c.days_duration_requested_stay,
c.m_guest,
c.days_from_first_contact_to_first_checkin
c.dow_checkin,
c.moy_checkin,
--guest"s attribute
g.country as guest_country,
g.words_in_user_profile as guest_words_in_profile,
c.guest_user_stage_first,
--guest"s attribute
h.country as host_country,
h.words_in_user_profile as host_words_in_profile,
--listing"s attribute
l.room_type,
l.listing_neighborhood,
l.total_reviews,
--host and guest interaction attribute
c.m_interactions,
c.minute_from_first_reply_to_accept,
c.minute_from_first_touch_to_reply
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            --guests
left join users h on h.id_user_anon = c.id_host_anon             --hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    --listing
')
p1 <- sqldf('select
-- target variable
(case when ts_booking_at_posix is null then 0 else 1 end) as target,
-- reservation related attributes
c.days_duration_requested_stay,
c.m_guest,
c.days_from_first_contact_to_first_checkin,
c.dow_checkin,
c.moy_checkin,
-- guest"s attribute
g.country as guest_country,
g.words_in_user_profile as guest_words_in_profile,
c.guest_user_stage_first,
-- guest"s attribute
h.country as host_country,
h.words_in_user_profile as host_words_in_profile,
-- listing"s attribute
l.room_type,
l.listing_neighborhood,
l.total_reviews,
-- host and guest interaction attribute
c.m_interactions,
c.minute_from_first_reply_to_accept,
c.minute_from_first_touch_to_reply
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            -- guests
left join users h on h.id_user_anon = c.id_host_anon             -- hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    -- listing
')
View(contacts)
p1 <- sqldf('select
-- target variable
(case when ts_booking_at_posix is null then 0 else 1 end) as target,
-- reservation related attributes
c.days_duration_requested_stay,
c.m_guests,
c.days_from_first_contact_to_first_checkin,
c.dow_checkin,
c.moy_checkin,
-- guest"s attribute
g.country as guest_country,
g.words_in_user_profile as guest_words_in_profile,
c.guest_user_stage_first,
-- guest"s attribute
h.country as host_country,
h.words_in_user_profile as host_words_in_profile,
-- listing"s attribute
l.room_type,
l.listing_neighborhood,
l.total_reviews,
-- host and guest interaction attribute
c.m_interactions,
c.minute_from_first_reply_to_accept,
c.minute_from_first_touch_to_reply
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            -- guests
left join users h on h.id_user_anon = c.id_host_anon             -- hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    -- listing
')
p1 <- sqldf('select
-- target variable
(case when c.ts_booking_at_posix is null then 0 else 1 end) as target,
-- reservation related attributes
c.days_duration_requested_stay,
c.m_guests,
c.days_from_first_contact_to_first_checkin,
c.dow_checkin,
c.moy_checkin,
-- guest"s attribute
g.country as guest_country,
g.words_in_user_profile as guest_words_in_profile,
c.guest_user_stage_first,
-- guest"s attribute
h.country as host_country,
h.words_in_user_profile as host_words_in_profile,
-- listing"s attribute
l.room_type,
l.listing_neighborhood,
l.total_reviews,
-- host and guest interaction attribute
c.m_interactions,
c.minute_from_first_reply_to_accept,
c.minute_from_first_touch_to_reply
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            -- guests
left join users h on h.id_user_anon = c.id_host_anon             -- hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    -- listing
')
p1 <- sqldf('select
(case when c.ts_booking_at_posix is null then 0 else 1 end) as target
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            --guests
left join users h on h.id_user_anon = c.id_host_anon             --hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    --listing
')
p1
p1 <- sqldf('select
-- reservation related attributes
c.days_duration_requested_stay,
c.m_guests,
c.days_from_first_contact_to_first_checkin,
c.dow_checkin,
c.moy_checkin
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            --guests
left join users h on h.id_user_anon = c.id_host_anon             --hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    --listing
')
p1 <- sqldf('select
c.days_duration_requested_stay,
c.m_guests,
c.days_from_first_contact_to_first_checkin,
c.dow_checkin,
c.moy_checkin
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            --guests
left join users h on h.id_user_anon = c.id_host_anon             --hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    --listing
')
p1 <- sqldf('select
-- reservation related attributes
c.days_duration_requested_stay,
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            --guests
left join users h on h.id_user_anon = c.id_host_anon             --hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    --listing
')
p1 <- sqldf('select
-- reservation related attributes
c.days_duration_requested_stay
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            --guests
left join users h on h.id_user_anon = c.id_host_anon             --hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    --listing
')
p1 <- sqldf('select
-- reservation related attributes
c.days_duration_requested_stay
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            --guests
left join users h on h.id_user_anon = c.id_host_anon             --hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    --listing
', method = "name__class")
p1
p1 <- sqldf('select
-- target variable
(case when c.ts_booking_at_posix is null then 0 else 1 end) as target,
-- reservation related attributes
c.days_duration_requested_stay,
c.m_guests,
c.days_from_first_contact_to_first_checkin,
c.dow_checkin,
c.moy_checkin,
-- guest"s attribute
g.country as guest_country,
g.words_in_user_profile as guest_words_in_profile,
c.guest_user_stage_first,
-- guest"s attribute
h.country as host_country,
h.words_in_user_profile as host_words_in_profile,
-- listing"s attribute
l.room_type,
l.listing_neighborhood,
l.total_reviews,
-- host and guest interaction attribute
c.m_interactions,
c.minute_from_first_reply_to_accept,
c.minute_from_first_touch_to_reply
from contacts c
left join users g on g.id_user_anon = c.id_guest_anon            -- guests
left join users h on h.id_user_anon = c.id_host_anon             -- hosts
left join listings l on l.id_listing_anon = c.id_listing_anon    -- listing
', method = "name__class")
p1
View(p1)
str(p1)
View(contacts)
